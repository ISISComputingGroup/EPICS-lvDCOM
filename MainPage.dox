<HTML>
/** @mainpage lvDCOM (LabVIEW DCOM EPICS Support Module)

lvDCOM is an <A HREF="http://www.aps.anl.gov/epics/">EPICS</A> support module   
that exports front panel variables from National Instruments LabVIEW software applications 
as EPICS process variables on computers running the Microsoft Windows operating system. 
The program allows you to rapidly "EPICS enable" LabVIEW applications as it is not
necessary to modify a Virtual Instruments (VIs) internals. As the program makes use
of DCOM, this (ActiveX) needs to be selected in the "VI Server" options of LabVIEW,
but this is the only required change to a VI.

<P>

For a brief introduction to lvDCOM see the
<A HREF="http://www.epics2013.org/dms/EPICS2013/presentations/friday/Session_1/LabVIEW-via-DCOM-IOC-EPICS-2013/LabVIEW%20via%20DCOM%20IOC%20EPICS%202013.ppt">following presentation</A>
from the <A HREF="http://www.epics2013.org/">EPICS 2013 spring meeting</A>
(also available as PDF in doc directory of distribution)

</P><P>

lvDCOM allows LabVIEW variables to be accessed by EPICS aware tools, if you wish to instead display EPICS process variables on LabVIEW front panels then <A HREF="http://www-csr.bessy.de/control/SoftDist/CA_Lab/">CA Lab</A> is what you need.

</P>

Features of lvDCOM are:
<UL>
<LI> Able to communicate with either native LabVIEW VIs or compiled LabVIEW applications (.EXE)
  <UL>
  <LI> For a compiled LabVIEW application, you need to select the 
       "advanced properties" and check the "enable ActiveX server" box and 
	   specify an "ActiveX server name" when you build the application. If 
	   you give, for example, "MyApp" here then you would specify 
	   "MyApp.Application" as the progid parameter to lvDCOMConfigure() in 
	   your @link st.cmd IOC startup file. @endlink 
  </UL>
<LI> Can (optionally) automatically start and/or stop VIs on IOC startup/shutdown (see #lvDCOMOptions)
<LI> Can communicate with remote Windows PCs using standard DCOM authentication or 
     a supplied username + password
<LI> Can handle additional front panel logic e.g. automatically push a front panel button either 
     before doing a read from, of after doing a write to, another front panel variable
</UL>

</P><P>

The lvDCOM program is an EPICS
<A HREF="http://www.aps.anl.gov/epics/modules/soft/asyn/">Asyn driver</A> that 
uses DCOM to communicate with LabVIEW. LabVIEW front panel items (controls and indicators) 
are mapped to asyn driver parameters via an XML configuration file @link lvinput.xml @endlink
("section" in XML file -> asyn port name), and these parameters can then be accessed 
via the EPICs DB records DTYP field.

</P><P>

The syntax of the XML configuration file is described in the 
comments in @link lvinput.xml @endlink and @link lvDCOMinput.xsd @endlink .
An initial XML file can first be generated by the procedure 
below and then adjusted accordingly. 
This procedure will also attempt to map LabVIEW rings/enums into 
EPICS MBBI/MBBO records, but as some of the value information is not 
available in the LabVIEW controls export process the results may need to be adjusted 
before use.

</P>

See the doc directory of the distribution for further information 

<H2>Download</H2>

Source code and a pre-build Windows binary of lvDCOM can be downloaded from the
<A HREF="http://epics.isis.stfc.ac.uk/downloads/">ISIS EPICS Downloads page</A>.

<P>

It is not necessary to create a new lvDCOM IOC to talk to a different
set of VIs. Everything is configured from @link st.cmd @endlink via @link lvinput.xml @endlink
and so the same executable can be re-used. The @link lvinput.xml @endlink file supports
multiple VI definition section and so can also be shared between IOCs.     
</P>

<H2>Requirements</H2>

The sed and xsltproc programs are required to generate an initial configuration 
file from the "exported strings" of a LabVIEW front panel. Binaries for these are 
available from http://gnuwin32.sourceforge.net/packages/sed.htm 
and http://gnuwin32.sourceforge.net/packages/libxslt.htm

<P>

Building lvDCOM from source requires the full version of the 
Microsoft Visual Studio C++ compiler 
(<A HREF="http://en.wikipedia.org/wiki/Active_Template_Library">ATL</A> 
is used for DCOM and that is not available
in the express compiler version). A pre-built win32 lvDCOM binary can, however, 
be downloaded from http://epics.isis.stfc.ac.uk/ and this does not require any additional 
Microsoft tools/libraries to be installed.

</P>

<H3>Automatically generate XML configuration and EPICS DB files</H3>

We first need a list of the available controls/indicators on the VI via:
<UL>
<LI> Open VI in LabVIEW  
<LI> Go to Tools menu, Advanced, Export Strings... and uncheck the wizard 
     option for "block diagram strings" and save to a text file e.g. <b>@link controls.txt @endlink</b> 
     (Note: you need write access to the VI itself to do this, so you may 
	 need to make a local copy of the VI first)
</UL>

<P>

For the next couple of steps you need both the xsltproc and sed programs in 
your PATH - see requirements section above

</P><P>

First we need to adjust the "exported strings" from LabVIEW so it can be 
read by XML utilities, via:
<PRE>
fix_xml.cmd controls.txt controls.xml
</PRE>
which generates a <b>@link controls.xml @endlink</b> file. Then to generate the initial 
LvDCOM input file run:
<PRE>
xsltproc lvstrings2input.xsl controls.xml > lvinput.xml
</PRE>
you can now edit <b>@link lvinput.xml @endlink</b> to remove or rename items etc. An XML 
schema definition file <b>@link lvDCOMinput.xsd @endlink</b> is also provided and, if 
present in the same directory as <b>@link lvinput.xml @endlink</b>, should be picked up 
automatically by XML aware editors to make editing easier. Finally, to 
generate an initial EPICS DB record file run: 
<PRE>
xsltproc lvinput2db.xsl lvinput.xml > example.db
</PRE>
</P><P>
As before, <b>@link example.db @endlink</b> can then be adjusted as appropriate. 
The <b>@link fix_xml.cmd @endlink</b> and <b>xsltproc</b> commands above should not produce 
any screen output - if they do it is probably because they encountered an 
error parsing the file.
</P>

<H2>Support</H2>

If you need further help, or discover any problems, or have any suggestions for
new features/improvements, please contact me (freddie.akeroyd at stfc.ac.uk)

<H2>License</H2>

lvDCOM is Copyright (c) 2013 <A HREF="http://www.isis.stfc.ac.uk/">STFC ISIS Facility, Rutherford Appleton Laboratory, GB</A>. All rights reserved.<BR />
It is distributed under the <A HREF="http://www.aps.anl.gov/epics/license/index.php">EPICS Open License</A> 
as detailed in the included LICENSE.txt file.

<P>

When distributed in binary form, lvDCOM will have been linked against both 
the <A HREF="http://www.aps.anl.gov/epics/base/">EPICS BASE</A> and the 
<A HREF="http://www.aps.anl.gov/epics/modules/soft/asyn/">ASYN driver</A> software. 
These works are covered by 
licences detailed in the LICENSE_EPICS_BASE.txt and LICENSE_ASYN.txt files 
contained within the distribution.

</P>

*/

<!-- $Id$ -->
</HTML>
